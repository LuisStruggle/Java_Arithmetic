/**
 * 题目描述：设计一个算法，找出只含素因子2，3，5 的第 n 大的数。符合条件的数如：1, 2, 3, 4, 5, 6, 8, 9, 10, 12...
 * 
 * @author liuyang
 * @version
 * @see com.study.arithmetic.nthUglyNumber.Solution.java
 */
public class Solution
{
    /**
     * 思路：最近一个数一定是上一个数之前的某一个丑数的2、3、5倍
     * 
     * @param n an integer
     * @return the nth prime number as description.
     */
    public int nthUglyNumber(int n)
    {
        // 丑数计数器
        int count = 1;

        // 定义一个数组，用于保存丑数
        int[] target = new int[n + 1];

        target[0] = 0;
        target[1] = 1;

        int two = 0, three = 0, five = 0;

        while (count < n)
        {
            for (int j = 1; j <= count; j++)
            {
                if (2 * target[j - 1] <= target[count] && 2 * target[j] >= target[count])
                {
                    two = 2 * target[j];
                }
                if (3 * target[j - 1] <= target[count] && 3 * target[j] >= target[count])
                {
                    three = 3 * target[j];
                }
                if (5 * target[j - 1] <= target[count] && 5 * target[j] >= target[count])
                {
                    five = 5 * target[j];
                }
            }
            if (two <= three && two <= five)
            {
                target[count + 1] = two;
                count++;
            }
            else if (three <= two && three <= five)
            {
                target[count + 1] = three;
                count++;
            }
            else if (five <= two && five <= three)
            {
                target[count + 1] = five;
                count++;
            }
        }
        return target[n];
    }

    public static void main(String[] args)
    {
        Solution s = new Solution();

        System.out.println(s.nthUglyNumber(0));
    }

}
